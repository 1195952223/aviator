swap = lambda(xs, l, r) ->
  let temp = xs[l];
  xs[l] = xs[r];
  xs[r] = temp; 
end;

partition = lambda(xs, l, r, p)  ->
  while(l<=r) {
    while(xs[l] <p ) {
      l = l+1;
    }
    while(xs[r]>p) {
      r = r -1;
    } 
    if(l<=r) {
      swap(xs, l, r);
       l = l+1;
        r = r -1;
    }
  }
  return l;
end;

qsort0 = lambda(xs, l, r) ->
  if(l>=r) {
    return nil;
  }
  let mid = (l+r)/2;
  let p = xs[mid];
  let i = partition(xs, l, r, p);
  qsort0(xs, l, i-1);
  qsort0(xs, i, r);
end;

qsort = lambda(xs) ->
  qsort0(xs, 0, count(xs)-1);
end;

let xs = seq.array(int, 9,-2, 3, 100, 0, 7, 2, 5);

qsort(xs);

for i in xs {
 println(i);
}
